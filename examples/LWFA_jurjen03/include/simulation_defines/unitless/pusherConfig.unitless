/**
 * Copyright 2013-2016 Axel Huebl, Rene Widera, Richard Pausch
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */



#pragma once

#include "algorithms/Gamma.hpp"
#include "algorithms/Velocity.hpp"


#include "particles/pusher/particlePusherBoris.hpp"
#include "particles/pusher/particlePusherVay.hpp"
#include "particles/pusher/particlePusherFree.hpp"
#include "particles/pusher/particlePusherPhoton.hpp"
#include "particles/pusher/particlePusherReducedLandauLifshitz.hpp"
#if(SIMDIM==DIM3)
#include "particles/pusher/particlePusherAxel.hpp"
#endif

namespace picongpu
{

namespace particles
{
namespace pusher
{

#if(SIMDIM==DIM3)

struct Axel
{
    typedef particlePusherAxel::Push<Velocity, Gamma<> > type;
};
#endif

struct Boris
{
    typedef particlePusherBoris::Push<Velocity, Gamma<> > type;
};

struct Vay
{
    typedef particlePusherVay::Push<Velocity, Gamma<> > type;
};

struct Free
{
    typedef particlePusherFree::Push<Velocity, Gamma<> > type;
};

struct Photon
{
    typedef particlePusherPhoton::Push<Velocity, Gamma<> > type;
};

struct ReducedLandauLifshitz
{
    typedef particlePusherReducedLandauLifshitz::Push<Velocity, Gamma<> > type;
};

} //namespace pusher
} //namespace particles
} //namespace picongpu
